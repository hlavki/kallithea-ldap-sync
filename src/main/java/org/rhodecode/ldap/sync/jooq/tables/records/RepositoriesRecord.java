/**
 * This class is generated by jOOQ
 */
package org.rhodecode.ldap.sync.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RepositoriesRecord extends org.jooq.impl.UpdatableRecordImpl<org.rhodecode.ldap.sync.jooq.tables.records.RepositoriesRecord> implements org.jooq.Record18<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.String, java.lang.Boolean, java.lang.String, byte[], java.lang.Integer, java.lang.Integer, java.lang.String> {

	private static final long serialVersionUID = 1658164287;

	/**
	 * Setter for <code>public.repositories.repo_id</code>. 
	 */
	public void setRepoId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.repositories.repo_id</code>. 
	 */
	public java.lang.Integer getRepoId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.repositories.repo_name</code>. 
	 */
	public void setRepoName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.repositories.repo_name</code>. 
	 */
	public java.lang.String getRepoName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>public.repositories.clone_uri</code>. 
	 */
	public void setCloneUri(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.repositories.clone_uri</code>. 
	 */
	public java.lang.String getCloneUri() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>public.repositories.repo_type</code>. 
	 */
	public void setRepoType(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.repositories.repo_type</code>. 
	 */
	public java.lang.String getRepoType() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>public.repositories.user_id</code>. 
	 */
	public void setUserId(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.repositories.user_id</code>. 
	 */
	public java.lang.Integer getUserId() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>public.repositories.private</code>. 
	 */
	public void setPrivate(java.lang.Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.repositories.private</code>. 
	 */
	public java.lang.Boolean getPrivate() {
		return (java.lang.Boolean) getValue(5);
	}

	/**
	 * Setter for <code>public.repositories.statistics</code>. 
	 */
	public void setStatistics(java.lang.Boolean value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.repositories.statistics</code>. 
	 */
	public java.lang.Boolean getStatistics() {
		return (java.lang.Boolean) getValue(6);
	}

	/**
	 * Setter for <code>public.repositories.downloads</code>. 
	 */
	public void setDownloads(java.lang.Boolean value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.repositories.downloads</code>. 
	 */
	public java.lang.Boolean getDownloads() {
		return (java.lang.Boolean) getValue(7);
	}

	/**
	 * Setter for <code>public.repositories.description</code>. 
	 */
	public void setDescription(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>public.repositories.description</code>. 
	 */
	public java.lang.String getDescription() {
		return (java.lang.String) getValue(8);
	}

	/**
	 * Setter for <code>public.repositories.created_on</code>. 
	 */
	public void setCreatedOn(java.sql.Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>public.repositories.created_on</code>. 
	 */
	public java.sql.Timestamp getCreatedOn() {
		return (java.sql.Timestamp) getValue(9);
	}

	/**
	 * Setter for <code>public.repositories.updated_on</code>. 
	 */
	public void setUpdatedOn(java.sql.Timestamp value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>public.repositories.updated_on</code>. 
	 */
	public java.sql.Timestamp getUpdatedOn() {
		return (java.sql.Timestamp) getValue(10);
	}

	/**
	 * Setter for <code>public.repositories.landing_revision</code>. 
	 */
	public void setLandingRevision(java.lang.String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>public.repositories.landing_revision</code>. 
	 */
	public java.lang.String getLandingRevision() {
		return (java.lang.String) getValue(11);
	}

	/**
	 * Setter for <code>public.repositories.enable_locking</code>. 
	 */
	public void setEnableLocking(java.lang.Boolean value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>public.repositories.enable_locking</code>. 
	 */
	public java.lang.Boolean getEnableLocking() {
		return (java.lang.Boolean) getValue(12);
	}

	/**
	 * Setter for <code>public.repositories.locked</code>. 
	 */
	public void setLocked(java.lang.String value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>public.repositories.locked</code>. 
	 */
	public java.lang.String getLocked() {
		return (java.lang.String) getValue(13);
	}

	/**
	 * Setter for <code>public.repositories.changeset_cache</code>. 
	 */
	public void setChangesetCache(byte[] value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>public.repositories.changeset_cache</code>. 
	 */
	public byte[] getChangesetCache() {
		return (byte[]) getValue(14);
	}

	/**
	 * Setter for <code>public.repositories.fork_id</code>. 
	 */
	public void setForkId(java.lang.Integer value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>public.repositories.fork_id</code>. 
	 */
	public java.lang.Integer getForkId() {
		return (java.lang.Integer) getValue(15);
	}

	/**
	 * Setter for <code>public.repositories.group_id</code>. 
	 */
	public void setGroupId(java.lang.Integer value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>public.repositories.group_id</code>. 
	 */
	public java.lang.Integer getGroupId() {
		return (java.lang.Integer) getValue(16);
	}

	/**
	 * Setter for <code>public.repositories.repo_state</code>. 
	 */
	public void setRepoState(java.lang.String value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>public.repositories.repo_state</code>. 
	 */
	public java.lang.String getRepoState() {
		return (java.lang.String) getValue(17);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record18 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row18<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.String, java.lang.Boolean, java.lang.String, byte[], java.lang.Integer, java.lang.Integer, java.lang.String> fieldsRow() {
		return (org.jooq.Row18) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row18<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.String, java.lang.Boolean, java.lang.String, byte[], java.lang.Integer, java.lang.Integer, java.lang.String> valuesRow() {
		return (org.jooq.Row18) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.REPO_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.REPO_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.CLONE_URI;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.REPO_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field6() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.PRIVATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field7() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.STATISTICS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field8() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.DOWNLOADS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field9() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field10() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.CREATED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field11() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.UPDATED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field12() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.LANDING_REVISION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field13() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.ENABLE_LOCKING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field14() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.LOCKED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field15() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.CHANGESET_CACHE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field16() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.FORK_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field17() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.GROUP_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field18() {
		return org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES.REPO_STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getRepoId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getRepoName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getCloneUri();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getRepoType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value6() {
		return getPrivate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value7() {
		return getStatistics();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value8() {
		return getDownloads();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value9() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value10() {
		return getCreatedOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value11() {
		return getUpdatedOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value12() {
		return getLandingRevision();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value13() {
		return getEnableLocking();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value14() {
		return getLocked();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value15() {
		return getChangesetCache();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value16() {
		return getForkId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value17() {
		return getGroupId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value18() {
		return getRepoState();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RepositoriesRecord
	 */
	public RepositoriesRecord() {
		super(org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES);
	}

	/**
	 * Create a detached, initialised RepositoriesRecord
	 */
	public RepositoriesRecord(java.lang.Integer repoId, java.lang.String repoName, java.lang.String cloneUri, java.lang.String repoType, java.lang.Integer userId, java.lang.Boolean private_, java.lang.Boolean statistics, java.lang.Boolean downloads, java.lang.String description, java.sql.Timestamp createdOn, java.sql.Timestamp updatedOn, java.lang.String landingRevision, java.lang.Boolean enableLocking, java.lang.String locked, byte[] changesetCache, java.lang.Integer forkId, java.lang.Integer groupId, java.lang.String repoState) {
		super(org.rhodecode.ldap.sync.jooq.tables.Repositories.REPOSITORIES);

		setValue(0, repoId);
		setValue(1, repoName);
		setValue(2, cloneUri);
		setValue(3, repoType);
		setValue(4, userId);
		setValue(5, private_);
		setValue(6, statistics);
		setValue(7, downloads);
		setValue(8, description);
		setValue(9, createdOn);
		setValue(10, updatedOn);
		setValue(11, landingRevision);
		setValue(12, enableLocking);
		setValue(13, locked);
		setValue(14, changesetCache);
		setValue(15, forkId);
		setValue(16, groupId);
		setValue(17, repoState);
	}
}
